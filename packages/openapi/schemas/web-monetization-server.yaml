openapi: 3.1.0
info:
  title: Web Monetization Server
  version: 1.0.0-beta
  contact:
    email: tech@interledger.org

paths:
  /:
    post:
      operationId: monetization
      security:
        - bearer: []
      summary: Pay into an incoming payment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                incoming_payment_url:
                  type: string
                  format: uri
                amount:
                  type: number
                access_token:
                  type: string
                manage_url:
                  type: string
                  format: uri
              required:
                - incoming_payment_url
                - amount
                - access_token
                - manage_url
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  incoming_payment_url:
                    type: string
                    format: uri
                required:
                  - incoming_payment_url

  /connect:
    post:
      operationId: connect-wallet
      security:
        - bearer: []
      summary: Connect a wallet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                wallet_address_url:
                  type: string
                  format: uri
                amount:
                  type: number
                recurring:
                  type: boolean
              required:
                - wallet_address_url
                - amount
                - recurring
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  interaction_url:
                    type: string
                    format: uri
                  continue_url:
                    type: string
                    format: uri
                  continue_token:
                    type: string
                required:
                  - interactionUrl
                  - continueUrl
                  - continueToken
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_with_validation'
              examples:
                Without validation errors:
                  value:
                    status: 400
                    message: 'Missing query parameter'
                With validation errors:
                  value:
                    status: 400
                    message: 'Invalid request body'
                    validationErrors:
                      - field: 'wallet_address'
                        message: 'Invalid wallet address'
                      - field: 'amount'
                        message: 'Invalid amount'

  /pay:

  /incoming-payment:
    post:
      operationId: create-incoming-payment
      security:
        - bearer: []
      summary: Create incoming payment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                wallet_address_url:
                  type: string
                  format: uri
              required:
                - wallet_address_url
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  incoming_payment_url:
                    type: string
                    format: uri
                required:
                  - incomingPaymentUrl

components:
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
  schemas:
    error:
      type: object
      properties:
        status:
          type: integer
          minimum: 100
          maximum: 599
        message:
          type: string
      required:
        - status
        - message
    error_with_validation:
      allOf:
        - $ref: '#/components/schemas/error'
        - type: object
          properties:
            validationErrors:
              type: array
              items:
                type: object
                properties:
                  field:
                    type: string
                  message:
                    type: string
                required:
                  - field
                  - message
